{
    "name": "markdowntable",
    "publisher": "TakumiI",
    "displayName": "Markdown Table",
    "description": "Add features to edit markdown table.",
    "version": "0.10.4",
    "icon": "icon.drawio.png",
    "repository": {
        "type": "git",
        "url": "https://github.com/takumisoft68/vscode-markdown-table"
    },
    "engines": {
        "vscode": "^1.63.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onLanguage:markdown",
        "onLanguage:mdx",
        "onLanguage:quarto",
        "onCommand:markdowntable.tsvToTable",
        "onCommand:markdowntable.format",
        "onCommand:markdowntable.insertRight",
        "onCommand:markdowntable.insertLeft",
        "onCommand:markdowntable.nextCell",
        "onCommand:markdowntable.prevCell",
        "onCommand:markdowntable.nextCellWithoutFormat",
        "onCommand:markdowntable.prevCellWithoutFormat",
        "onCommand:markdowntable.alignLeft",
        "onCommand:markdowntable.alignCenter",
        "onCommand:markdowntable.alignRight"
    ],
    "main": "./out/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "markdowntable.format",
                "title": "Markdown Table: Format all tables."
            },
            {
                "command": "markdowntable.tsvToTable",
                "title": "Markdown Table: Convert TSV to table."
            },
            {
                "command": "markdowntable.insertRight",
                "title": "Markdown Table: Insert column to the right."
            },
            {
                "command": "markdowntable.insertLeft",
                "title": "Markdown Table: Insert column to the left."
            },
            {
                "command": "markdowntable.nextCell",
                "title": "Markdown Table: Navigate to next cell."
            },
            {
                "command": "markdowntable.prevCell",
                "title": "Markdown Table: Navigate to previous cell."
            },
            {
                "command": "markdowntable.nextCellWithoutFormat",
                "title": "Markdown Table: Navigate to next cell (without auto format)."
            },
            {
                "command": "markdowntable.prevCellWithoutFormat",
                "title": "Markdown Table: Navigate to previous cell (without auto format)."
            },
            {
                "command": "markdowntable.alignLeft",
                "title": "Markdown Table: Align to Left."
            },
            {
                "command": "markdowntable.alignCenter",
                "title": "Markdown Table: Align to Center."
            },
            {
                "command": "markdowntable.alignRight",
                "title": "Markdown Table: Align to Right."
            }
        ],
        "keybindings": [
            {
                "command": "markdowntable.nextCell",
                "key": "tab",
                "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible && !inSnippetMode && markdowntable.contextkey.selection.InMarkdownTable"
            },
            {
                "command": "markdowntable.prevCell",
                "key": "shift+tab",
                "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible && !inSnippetMode && markdowntable.contextkey.selection.InMarkdownTable"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "when": "markdowntable.contextkey.active.IsSupportedLanguage",
                    "command": "markdowntable.format",
                    "group": "markdowntable@1"
                },
                {
                    "when": "markdowntable.contextkey.active.IsSupportedLanguage && editorHasSelection",
                    "command": "markdowntable.tsvToTable",
                    "group": "markdowntable@2"
                },
                {
                    "when": "markdowntable.contextkey.active.IsSupportedLanguage && markdowntable.contextkey.selection.InMarkdownTable",
                    "command": "markdowntable.insertRight",
                    "group": "markdowntable@3"
                },
                {
                    "when": "markdowntable.contextkey.active.IsSupportedLanguage && markdowntable.contextkey.selection.InMarkdownTable",
                    "command": "markdowntable.insertLeft",
                    "group": "markdowntable@4"
                },
                {
                    "when": "markdowntable.contextkey.active.IsSupportedLanguage && markdowntable.contextkey.selection.InMarkdownTable",
                    "command": "markdowntable.alignLeft",
                    "group": "markdowntable@5"
                },
                {
                    "when": "markdowntable.contextkey.active.IsSupportedLanguage && markdowntable.contextkey.selection.InMarkdownTable",
                    "command": "markdowntable.alignCenter",
                    "group": "markdowntable@6"
                },
                {
                    "when": "markdowntable.contextkey.active.IsSupportedLanguage && markdowntable.contextkey.selection.InMarkdownTable",
                    "command": "markdowntable.alignRight",
                    "group": "markdowntable@7"
                }
            ]
        },
        "configuration": {
            "title": "Markdown Table",
            "properties": {
                "markdowntable.alignData": {
                    "type": "boolean",
                    "default": true,
                    "description": "Align data in the table when formatting"
                },
                "markdowntable.alignColumnHeader": {
                    "type": "boolean",
                    "default": true,
                    "description": "Align column header in the table when formatting"
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "lint": "eslint src --ext ts",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile && npm run lint",
        "test": "node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/glob": "^8.1.0",
        "@types/mocha": "^10.0.2",
        "@types/node": "^20.8.6",
        "@types/vscode": "^1.83.0",
        "@typescript-eslint/eslint-plugin": "^6.7.5",
        "@typescript-eslint/parser": "^6.7.5",
        "eslint": "^8.51.0",
        "glob": "^10.3.10",
        "mocha": "^10.2.0",
        "typescript": "^5.2.2",
        "vscode-test": "^1.6.1"
    }
}
